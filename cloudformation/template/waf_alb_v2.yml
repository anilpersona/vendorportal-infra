---
AWSTemplateFormatVersion: "2010-09-09"
Description: "VendorPortal portal - WAF V2 applied to Public ALB endpoint"

Parameters:
  EnableALBWAF:
    Type: String
    Default: "false"
  AlbStack:
    Type: String
    Default: Test
  WhitelistIPv4:
    Type: CommaDelimitedList    
    Description: CIDR notation list of IPs to be allowed (imperva IPs)
    Default: ''
  BlacklistIPv4:
    Type: CommaDelimitedList
    Description: CIDR notation list of IPs to be blocked (imperva IPs)
    Default: ''
  WAFScope:
    Default: REGIONAL
    Type: "String"
  BillingTag:
    Default: "vendorportal"
    Type: "String"
  OwnerTag:
    Default: "vendorportal"
    Type: "String"
  ProjectTag:
    Default: "vendorportal"
    Type: "String"
  Environment:
    Default: "dev"
    AllowedValues: [dev, prod, nonprod]
    Type: "String"
    ConstraintDescription: must specify prod, dev, or nonprod.
  StackIdentifier:
    Type: String
    AllowedPattern: '^([a-z0-9]+)?$'
    Default: ''
  RegexPatternSSMParamVersion:
    Type: String
    Default: '1'

Conditions:
  IsEmptyBlacklistIPv4: !Equals [ "", !Select [ 0 , !Ref BlacklistIPv4 ]]
  IsEmptyWhitelistIPv4: !Equals [ "", !Select [ 0 , !Ref WhitelistIPv4 ]]
  EnableALBWAF: !Equals [ "true" , !Ref EnableALBWAF]


Resources:
  VendPortalWhitelistIpsetV4:
    Type: AWS::WAFv2::IPSet
    Properties: 
      #Addresses: !Ref WhitelistIPv4
      Addresses:
        !If [ IsEmptyWhitelistIPv4, [], !Ref WhitelistIPv4 ]
      Description: "Whitelisted IPv4 IP List"
      IPAddressVersion: IPV4
      Name: !Sub "${AWS::StackName}-WhitelistIpsetV4"
      Scope: !Ref WAFScope
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-ipset-whitelist"
        - Key: Billing
          Value: !Ref BillingTag
        - Key: Environment
          Value: !Ref Environment        
        - Key: Owner
          Value: !Ref OwnerTag
        - Key: Project
          Value: !Ref ProjectTag    
  VendPortalWhitelistIpsetV6:
    Type: AWS::WAFv2::IPSet
    Properties: 
      Addresses: [] 
      Description: "Whitelisted IPv6 IP List"
      IPAddressVersion: IPV6
      Name: !Sub "${AWS::StackName}-WhitelistIpsetV6"
      Scope: !Ref WAFScope
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-ipset-whitelist"
        - Key: Billing
          Value: !Ref BillingTag
        - Key: Environment
          Value: !Ref Environment        
        - Key: Owner
          Value: !Ref OwnerTag
        - Key: Project
          Value: !Ref ProjectTag          
  
  VendPortalBlacklistIpsetV4:
    Type: AWS::WAFv2::IPSet
    Properties: 
      #Addresses: [] #- 192.0.2.44/32
      #Addresses: !Ref BlacklistIPv4
      Addresses:
        !If [IsEmptyBlacklistIPv4, [], !Ref BlacklistIPv4 ]
      Description: "Blacklisted IPv4 IP List"
      IPAddressVersion: IPV4
      Name: !Sub "${AWS::StackName}-BlacklistIpsetV4"
      Scope: !Ref WAFScope
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-ipset-blacklist-v4"
        - Key: Billing
          Value: !Ref BillingTag
        - Key: Environment
          Value: !Ref Environment        
        - Key: Owner
          Value: !Ref OwnerTag
        - Key: Project
          Value: !Ref ProjectTag
  VendPortalBlacklistIpsetV6:
    Type: AWS::WAFv2::IPSet
    Properties: 
      Addresses: []        
      Description: "Blacklisted IPv6 IP List"
      IPAddressVersion: IPV6
      Name: !Sub "${AWS::StackName}-BlacklistIpsetV6"
      Scope: !Ref WAFScope
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-ipset-blacklist-v6"
        - Key: Billing
          Value: !Ref BillingTag
        - Key: Environment
          Value: !Ref Environment        
        - Key: Owner
          Value: !Ref OwnerTag
        - Key: Project
          Value: !Ref ProjectTag          

  VendorPortalWebACL:
    Type: AWS::WAFv2::WebACL
    Properties: 
      Name: !Sub "${AWS::StackName}-AlbWebACL"
      Description: "Vendorportal webacl"
      DefaultAction:
        Block: {} 
      # CustomResponseBodies: 
      #   Content: "Request is Blocked"
      #   ContentType: TEXT_PLAIN      
      Scope: !Ref WAFScope
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-webacl-alb"
        - Key: Billing
          Value: !Ref BillingTag
        - Key: Environment
          Value: !Ref Environment        
        - Key: Owner
          Value: !Ref OwnerTag
        - Key: Project
          Value: !Ref ProjectTag
      VisibilityConfig: 
        CloudWatchMetricsEnabled: true
        MetricName: VendorPortalALBWebACL
        SampledRequestsEnabled: true
      Rules: 
        - Name: AWS-AWSManagedRulesCommonRuleSet
          Priority: 0
          OverrideAction:
            None: {}
          VisibilityConfig:
            SampledRequestsEnabled: true
            CloudWatchMetricsEnabled: true
            MetricName: !Join [ '', [   !Join [ '', !Split [ '-', !Sub '${AWS::StackName}' ]], AMRCRS]]
          Statement:
            ManagedRuleGroupStatement:
              VendorName: AWS
              Name: AWSManagedRulesCommonRuleSet            
        - Priority: 10
          Name: !Sub "${AWS::StackName}-WhitelistIp"
          Action:
            Allow: {}
          Statement:
            OrStatement:
              Statements: 
                - IPSetReferenceStatement: 
                    Arn: !GetAtt VendPortalWhitelistIpsetV4.Arn
                - IPSetReferenceStatement: 
                    Arn: !GetAtt VendPortalWhitelistIpsetV6.Arn                  
          VisibilityConfig: 
            CloudWatchMetricsEnabled: true
            MetricName: !Join [ '', [   !Join [ '', !Split [ '-', !Sub '${AWS::StackName}' ]], WhitelistIp]]
            SampledRequestsEnabled: true
        - Priority: 20
          Name: !Sub "${AWS::StackName}-BlacklistIp"
          Action:
            Block: {}
          Statement:
            OrStatement:
              Statements: 
                - IPSetReferenceStatement: 
                    Arn: !GetAtt VendPortalBlacklistIpsetV4.Arn
                - IPSetReferenceStatement: 
                    Arn: !GetAtt VendPortalBlacklistIpsetV6.Arn
          VisibilityConfig: 
            CloudWatchMetricsEnabled: true
            MetricName: !Join [ '', [   !Join [ '', !Split [ '-', !Sub '${AWS::StackName}' ]], BlacklistIp]]
            SampledRequestsEnabled: true
        - Priority: 30
          Name: !Sub "${AWS::StackName}-SqlInjectionRule"
          Action:
            Block: {}
          VisibilityConfig:
            SampledRequestsEnabled: true
            CloudWatchMetricsEnabled: true
            MetricName: !Join [ '', [   !Join [ '', !Split [ '-', !Sub '${AWS::StackName}' ]], SqlInjectionRule]]          
          Statement:
            OrStatement:
              Statements:
                - SqliMatchStatement:
                    FieldToMatch:
                      QueryString: {}
                    TextTransformations:
                      - Priority: 1
                        Type: URL_DECODE
                      - Priority: 2
                        Type: HTML_ENTITY_DECODE
                - SqliMatchStatement:
                    FieldToMatch:
                      Body: {}
                    TextTransformations:
                      - Priority: 1
                        Type: URL_DECODE
                      - Priority: 2
                        Type: HTML_ENTITY_DECODE
                - SqliMatchStatement:
                    FieldToMatch:
                      UriPath: {}
                    TextTransformations:
                      - Priority: 1
                        Type: URL_DECODE
                      - Priority: 2
                        Type: HTML_ENTITY_DECODE
                - SqliMatchStatement:
                    FieldToMatch:
                      SingleHeader: {Name: "Authorization"}
                    TextTransformations:
                      - Priority: 1
                        Type: URL_DECODE
                      - Priority: 2
                        Type: HTML_ENTITY_DECODE
                - SqliMatchStatement:
                    FieldToMatch:
                      SingleHeader: {Name: "Cookie"}
                    TextTransformations:
                      - Priority: 1
                        Type: URL_DECODE
                      - Priority: 2
                        Type: HTML_ENTITY_DECODE          
        - Priority: 40
          Name: !Sub "${AWS::StackName}-XssRule"       
          Action:
            Block: {}
          VisibilityConfig:
            SampledRequestsEnabled: true
            CloudWatchMetricsEnabled: true
            MetricName: !Join [ '', [   !Join [ '', !Split [ '-', !Sub '${AWS::StackName}' ]], XssRule]]            
          Statement:
            OrStatement:
              Statements:
                - XssMatchStatement:
                    FieldToMatch:
                      QueryString: {}
                    TextTransformations:
                      - Priority: 1
                        Type: URL_DECODE
                      - Priority: 2
                        Type: HTML_ENTITY_DECODE
                - XssMatchStatement:
                    FieldToMatch:
                      Body: {}
                    TextTransformations:
                      - Priority: 1
                        Type: URL_DECODE
                      - Priority: 2
                        Type: HTML_ENTITY_DECODE
                - XssMatchStatement:
                    FieldToMatch:
                      UriPath: {}
                    TextTransformations:
                      - Priority: 1
                        Type: URL_DECODE
                      - Priority: 2
                        Type: HTML_ENTITY_DECODE
                - XssMatchStatement:
                    FieldToMatch:
                      SingleHeader: {Name: "Cookie"}
                    TextTransformations:
                      - Priority: 1
                        Type: URL_DECODE
                      - Priority: 2
                        Type: HTML_ENTITY_DECODE
        - Priority: 50
          Name: !Sub "${AWS::StackName}-CheckHeader" 
          Action:
            Allow: {}
          VisibilityConfig:
            SampledRequestsEnabled: true
            CloudWatchMetricsEnabled: true
            MetricName: !Join [ '', [   !Join [ '', !Split [ '-', !Sub '${AWS::StackName}' ]], CheckHeader]]
          Statement:
            ByteMatchStatement:
              FieldToMatch:
                SingleHeader:
                  Name: dummy
              PositionalConstraint: EXACTLY
              SearchString: test
              TextTransformations:
              - Type: NONE
                Priority: 0
  
  VendorPortalAlbWafAssociation:
    Condition: EnableALBWAF
    Type: AWS::WAFv2::WebACLAssociation
    Properties: 
      ResourceArn: 
        Fn::ImportValue: !Sub "${AlbStack}::VendorPortalPublicALB"
      WebACLArn: !GetAtt  VendorPortalWebACL.Arn
Outputs:
  VendorPortalWebACLId:
    Value: !GetAtt  VendorPortalWebACL.Id
    Export:
      Name: !Sub "${AWS::StackName}::WebACLId"
  VendorPortalWebACLArn:
    Value: !GetAtt  VendorPortalWebACL.Arn
    Export:
      Name: !Sub "${AWS::StackName}::WebACLArn"
