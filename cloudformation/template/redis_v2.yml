AWSTemplateFormatVersion: 2010-09-09

Description: This contains the ElastiCache deployment for cache storage

Parameters:
  UpdateString:
    Type: String
    Default: one
    Description: to be updated while doing a repalceing change
  CWLogsRetentionPeriod:
    Type: Number
    Default: 7
  RedisFlagV2:
    Type: String
    Default: false
  AdminRedisUserId:
    Type: String
    NoEcho: "true"
    Default: test
  AdminRedisUserName:
    Type: String
    NoEcho: "true"
    Default: test
  AdminRedisPwd:
    Type: String
    NoEcho: "true"  
    Default: test 
  OsbRedisUserId:
    Type: String
    NoEcho: "true"
    Default: test           
  OsbRedisUserName:
    Type: String
    NoEcho: "true"
    Default: test
  OsbRedisPwd:
    Type: String
    NoEcho: "true"  
    Default: test
  SfrsRedisPwd:
    Type: String
    NoEcho: "true"
    Default: test
  SfrsRedisUserId:
    Type: String
    NoEcho: "true"
    Default: test    
  SfrsRedisUserName:
    Type: String
    NoEcho: "true"
    Default: test
  RedisPortV2:
    Type: Number
    Default: 6379     
  BillingTag:
    Default: vendorportal
    Type: String
  OwnerTag:
    Default: vendorportal
    Type: String
  ProjectTag:
    Default: vendorportal
    Type: String
  Environment:
    Default: dev
    AllowedValues: [dev, prod, nonprod]
    Type: String
    ConstraintDescription: must specify prod, dev, or nonprod.
  CacheNodeTypeV2:
    Type: String
    Default: cache.t3.small
    AllowedValues:
      - cache.t3.small
      - cache.t3.medium
      - cache.t4g.micro
      - cache.t4g.small
      - cache.t4g.medium
  KmsStack:
    Type: String
  RedisReplicationGroupId:
    Type: String
    Default: vendorportal-redis
  NoOfShardsPerClusterV2:
    Type: Number
    Default: 1
    MinValue: 1
    MaxValue: 90
  NoOfReplicasPerShardV2:
    Type: Number
    Default: 0
    MinValue: 0
    MaxValue: 5
  ReplicationGroupDescription:
    Type: String
    Default: Redis For Vendorportal
  RedisParameterGroupNameV2:
    Type: String
  RedisEngineVersionV2:
    Type: String     
  VpcBaseStack:
    Type: String
    AllowedPattern: '[A-Za-z][A-Za-z0-9-]{0,127}'
  SnsStack:
    Type: String
  SgStack:
    Type: String
  PreferredMaintenanceWindow:
    Description: >-
      The weekly time range during which system maintenance can occur. Use the
      following format to specify a time range: ddd:hh24:mi-ddd:hh24:mi (24H
      Clock UTC).
    Type: String
    Default: sun:22:00-sun:23:30
    AllowedPattern: >-
      (mon|tue|wed|thu|fri|sat|sun):\d{2}:\d{2}-(mon|tue|wed|thu|fri|sat|sun):\d{2}:\d{2}
    ConstraintDescription: >-
      must be a valid timestamp range with day of week, for example
      sun:22:00-sun:23:30

Conditions: 
 IsProd:  !Equals [ !Ref Environment, prod ]
 IsDeploy: !Equals [ !Ref RedisFlagV2 , "true" ]

Resources:
  VendorPortalDefaultUser:
    Type: AWS::ElastiCache::User
    Properties: 
      AccessString: "off ~* +@all"
      Engine: redis      
      Passwords: 
        - !Ref AdminRedisPwd
      UserId: !Sub "${ProjectTag}-default"
      UserName: "default"
  VendorPortalSfrsRedisUser:
    Type: AWS::ElastiCache::User
    Properties: 
      AccessString: "on ~sfrs -@all +@read +@write"
      Engine: redis      
      Passwords: 
        - !Ref SfrsRedisPwd
      UserId: !Ref SfrsRedisUserId
      UserName: !Ref SfrsRedisUserName
  VendorPortalOsbRedisUser:
    Type: AWS::ElastiCache::User
    Properties: 
      AccessString: "on ~* -@all +@read +@write"
      Engine: redis      
      Passwords: 
        - !Ref OsbRedisPwd
      UserId: !Ref OsbRedisUserId
      UserName: !Ref OsbRedisUserName
  VendorPortalAdminRedisUser:
    Type: AWS::ElastiCache::User
    Properties: 
      AccessString: "on ~* +@all"
      Engine: redis      
      Passwords: 
        - !Ref AdminRedisPwd
      UserId: !Ref AdminRedisUserId
      UserName: !Ref AdminRedisUserName
  VendorPortalRedisUserGroup:
    Type: AWS::ElastiCache::UserGroup
    Properties: 
      Engine: redis
      UserGroupId: !Sub "${RedisReplicationGroupId}-usergroup"
      UserIds: 
        - !Ref VendorPortalAdminRedisUser
        - !Ref VendorPortalOsbRedisUser
        - !Ref VendorPortalSfrsRedisUser
        - !Ref VendorPortalDefaultUser
  VendorPortalRedisLogGroup:
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Type: "AWS::Logs::LogGroup"
    Properties:
      # LogGroupName: !Sub "/aws/elasticache/redis/${RedisReplicationGroupId}"
      LogGroupName: !Sub "/aws/elasticache/redis/${RedisReplicationGroupId}-${Environment}"
      RetentionInDays: !Ref CWLogsRetentionPeriod  
  VendorPortalRedisSubnetGroup:
    Condition: IsDeploy
    Type: AWS::ElastiCache::SubnetGroup
    Properties:
      Description: Subnet Group for ElastiCache (Redis)
      SubnetIds:
        - Fn::ImportValue: !Sub ${VpcBaseStack}::SubnetIdDataAz1
        - Fn::ImportValue: !Sub ${VpcBaseStack}::SubnetIdDataAz2
        - Fn::ImportValue: !Sub ${VpcBaseStack}::SubnetIdDataAz3

  VendorPortalRedisReplicationGroup:
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Condition: IsDeploy
    UpdatePolicy:
      UseOnlineResharding: true
    Type: AWS::ElastiCache::ReplicationGroup
    Properties:
      AtRestEncryptionEnabled: true      
      AutomaticFailoverEnabled: true
      CacheNodeType: !Ref CacheNodeTypeV2
      CacheParameterGroupName: !Ref RedisParameterGroupNameV2
      CacheSubnetGroupName: !Ref VendorPortalRedisSubnetGroup
      Engine: redis
      EngineVersion: !Ref RedisEngineVersionV2
      IpDiscovery: ipv4
      KmsKeyId: 
        Fn::ImportValue: !Sub "${KmsStack}::KMSKey"
      LogDeliveryConfigurations:
        - DestinationDetails: 
            CloudWatchLogsDetails:
              LogGroup: !Ref VendorPortalRedisLogGroup
          DestinationType: cloudwatch-logs
          LogFormat: json
          LogType: slow-log
        - DestinationDetails: 
            CloudWatchLogsDetails:
              LogGroup: !Ref VendorPortalRedisLogGroup
          DestinationType: cloudwatch-logs
          LogFormat: json
          LogType: engine-log          
      NetworkType: ipv4
      NumNodeGroups: !Ref NoOfShardsPerClusterV2
      Port: !Ref RedisPortV2
      ReplicasPerNodeGroup: !Ref NoOfReplicasPerShardV2
      ReplicationGroupId: !Sub "${RedisReplicationGroupId}-${UpdateString}-${Environment}"
      PreferredMaintenanceWindow: !Ref PreferredMaintenanceWindow
      NotificationTopicArn:
        Fn::ImportValue: !Sub ${SnsStack}::PlatformNotificationTopic      
      ReplicationGroupDescription: !Ref ReplicationGroupDescription
      TransitEncryptionEnabled: true
      SecurityGroupIds:
        - Fn::ImportValue: !Sub ${SgStack}::VendorPortalRedisSecurityGroup
        - !If [ IsProd , !Ref AWS::NoValue , Fn::ImportValue: !Sub "${SgStack}::VendorPortalRedisDeveloperSecurityGroup" ]
      UserGroupIds:
        - !Ref VendorPortalRedisUserGroup
      Tags:
          - Key: Name
            Value: !Sub ${AWS::StackName}-ReplicationGroup-${Environment}
          - Key: Billing
            Value: !Ref BillingTag
          - Key: Environment
            Value: !Ref Environment   
          - Key: Owner
            Value: !Ref OwnerTag
          - Key: Project
            Value: !Ref ProjectTag
  VendorPortalRedisEndpointSSM:
    Condition: IsDeploy
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub /${ProjectTag}/redis/endpoint_url
      Type: String
      Value: !GetAtt VendorPortalRedisReplicationGroup.ConfigurationEndPoint.Address
      Description: Stores the redis endpoint url:port 
      Tags:
        Name: !Sub ${AWS::StackName}-endpoint
        Billinge: !Sub ${BillingTag}
        Environment: !Sub ${Environment}
        Owner: !Sub ${OwnerTag}
        Project: !Sub ${ProjectTag}
  VendorPortalRedisPortSSM:
    Condition: IsDeploy
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub /${ProjectTag}/redis/endpoint_port
      Type: String
      Value: !GetAtt VendorPortalRedisReplicationGroup.ConfigurationEndPoint.Port
      Description: Stores the redis port      
      Tags:
        Name: !Sub ${AWS::StackName}-port
        Billinge: !Sub ${BillingTag}
        Environment: !Sub ${Environment}
        Owner: !Sub ${OwnerTag}
        Project: !Sub ${ProjectTag}         

Outputs:
  RedisReplicationGroup:
    Condition: IsDeploy
    Description: A reference to redis replication group
    Value: !Ref VendorPortalRedisReplicationGroup
    Export:
      Name: !Sub ${AWS::StackName}::VendorPortalRedisReplicationGroup
